name: Dump env/context
run-name: Dump (${{ github.event_name }})
on:
  push: {}
  pull_request: {}
  workflow_call:
    inputs:
      is_workflow_call:
        description: Internal parameter
        required: false
        type: boolean
        default: true
      environment:
        description: Target environment
        required: true
        default: dev
        type: string
      noop:
        description: Dry run - skip pushing changes to ACR or infra repo
        required: true
        default: false
        type: boolean
      original-actor:
        description: Original actor of the workflow run
        required: false
        type: string
      other_param:
        description: Some param exclusive to workflow_call
        required: true
        default: foobar
        type: string
      run:
        description: Arbitrary command to run
        default: 'true'
        type: string
        required: true
  workflow_dispatch:
    inputs:
      environment:
        description: Target environment
        required: true
        type: choice
        default: dev
        options:
          - dev
          - stage
          - prod
      noop:
        description: Dry run - skip pushing changes to ACR or infra repo
        required: true
        default: false
        type: boolean
      original-actor:
        description: Original actor of the workflow run
        required: false
        type: string
      run:
        description: Arbitrary command to run
        type: choice
        required: true
        default: 'true'
        options:
          - 'true'
          - 'false'
  schedule:
    - cron: "0 0 */30 * *"
  check_run:
    types:
      - created
      - rerequested
      - completed
      - requested_action
  check_suite:
    types:
      - completed
  workflow_run:
    workflows: ["The showdown"]
    types: [completed]
    branches: [master]
  issue_comment:
    types: [created]
jobs:
  debug_token:
    runs-on: ubuntu-latest
    if: inputs.is_workflow_call
    steps:
      - run: gh release download -R swagger-api/swagger-ui -A tar.gz
        env:
          GH_TOKEN: ${{ github.token }}
  debug_context:
    runs-on: ubuntu-latest
    steps:
      - name: Debug arbirary command
        run: |
          : arbitrary command to run
          ${{ inputs.run }}
      - name: Original actor of this workflow
        run: echo "$ORIGINAL_ACTOR"
        env:
          ORIGINAL_ACTOR: ${{ endsWith(github.actor, '[bot]') && inputs.original-actor || github.actor }}
      - name: Set some output
        id: test-output
        run: echo "something=someone" >> "$GITHUB_OUTPUT"
      - name: Set some other output
        run: echo "konata=izumi" >> "$GITHUB_OUTPUT"
      - name: Write to step summary
        run: |
          echo "foobar" >> "$GITHUB_STEP_SUMMARY"
      - name: Read step files
        run: |
          # proving these are scoped by each step
          cat "$GITHUB_STEP_SUMMARY" 
          cat "$GITHUB_OUTPUT" 
        
      - name: Dump github context
        run: |
          echo "$GITHUB_CONTEXT" | jq '.token = (.token[0:5] + " ...")' > context.json
          echo "$GITHUB_CONTEXT" | jq -C '.token = (.token[0:5] + " ...")'
        shell: bash
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - name: Dump runner context
        run: echo "$RUNNER_CONTEXT"
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
          
      - name: Dump github event
        run: |
          cat "$GITHUB_EVENT_PATH" > event.json
          cat "$GITHUB_EVENT_PATH" | jq -C

      - name: Dump env
        run: env | tee github_env.env

      - name: Dump github context (javascript)
        uses: actions/github-script@v7
        with:
          script: |
            console.log('inputs:', { ...context.payload.inputs })
            console.log('context:', context)

            const fs = require('fs')
            fs.writeFile(`${process.env.GITHUB_WORKSPACE}/js-context.json`, JSON.stringify(context), err => {
              if (err) {
                console.error(err);
              } else {
                console.log("File written successfuly!");
              }
            });

      - name: Dump github context (javascript & jq)
        run: cat js-context.json | jq -C

      - name: Upload github context
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: |
            context.json
            github_env.env
            event.json
            js-context.json
